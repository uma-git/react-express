[{"C:\\express-react\\client\\src\\index.js":"1","C:\\express-react\\client\\src\\App.jsx":"2","C:\\express-react\\client\\src\\Appnew.jsx":"3","C:\\express-react\\client\\src\\BookCard.jsx":"4","C:\\express-react\\client\\src\\Contact.js":"5","C:\\express-react\\client\\src\\About.js":"6","C:\\express-react\\client\\src\\AppNav.js":"7"},{"size":186,"mtime":1606793355501,"results":"8","hashOfConfig":"9"},{"size":607,"mtime":1607401112241,"results":"10","hashOfConfig":"9"},{"size":6587,"mtime":1607399380564,"results":"11","hashOfConfig":"9"},{"size":2558,"mtime":1606094755330,"results":"12","hashOfConfig":"9"},{"size":2435,"mtime":1607401421710,"results":"13","hashOfConfig":"9"},{"size":3429,"mtime":1607672097680,"results":"14","hashOfConfig":"9"},{"size":1217,"mtime":1607398832057,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"gm5ubg",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"19"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"19"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"C:\\express-react\\client\\src\\index.js",["34"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport Appnew from './Appnew.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n",["35","36"],"C:\\express-react\\client\\src\\App.jsx",[],"C:\\express-react\\client\\src\\Appnew.jsx",["37","38","39","40","41","42","43","44"],"import React, { useState } from 'react';\r\nimport './App.css';\r\n// import './App1.scss';\r\nimport {\r\n  InputGroup,\r\n  Input,\r\n  InputGroupAddon,\r\n  Button,\r\n  FormGroup,\r\n  Label,\r\n  Spinner\r\n} from 'reactstrap';\r\nimport { ButtonBase } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport AppNav from \"./AppNav\";\r\n\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport axios from 'axios';\r\nimport BookCard from './BookCard.jsx';\r\n\r\n\r\nconst textpad = {\r\n    padding:'30px 30px 30px 30px',\r\n    \r\n  };\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n\r\nfunction Appnew() {\r\n  // States\r\n  const [maxResults, setMaxResults] = useState(10);\r\n  const [startIndex, setStartIndex] = useState(1);\r\n  const [query, setQuery] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [cards, setCards] = useState([]);\r\n  const [SortType, setSortType] = useState('newest');\r\n  const [totalResults, setTotalResults] = useState(0);\r\n  const [totalPages, setTotalPages] = useState(0);//count\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const classes = useStyles();\r\n  \r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    getData();\r\n  };\r\n\r\n  // Change page\r\n const paginate = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n    getData();\r\n    // handleCards()\r\n    \r\n  };\r\n\r\n  const getData = async () => { \r\n    \r\n    setLoading(true);\r\n    let c=0;\r\n    // let page=1;\r\n    if(currentPage > 1)\r\n    {\r\n            c = (currentPage - 1) * 20;\r\n            c=c+1;\r\n                   \r\n    }\r\n    else\r\n    c=1;\r\n    \r\n    // console.log(\"startindex--\"+c);\r\n     const res = await axios.get(`https://www.googleapis.com/books/v1/volumes?q=${query}&orderBy=${SortType}&maxResults=10&startIndex=${c}`);\r\n                \r\n           console.log(res);\r\n            if (res.data.items.length > 0) {\r\n                \r\n                const total = res.data.totalItems;\r\n                \r\n                // // const totalPagesCount = getPagesCount( total, 10 ); \r\n                 const totalPagesCount=Math.ceil(total / 10);  \r\n                // alert(totalPagesCount);\r\n                 setTotalPages(totalPagesCount);\r\n                 setTotalResults(total);\r\n                \r\n              setCards(res.data.items);\r\n             setLoading(false);\r\n            }\r\n          \r\n        };\r\n        \r\n    \r\n\r\n\r\n \r\n  // Main Show Case\r\n  const mainHeader = () => {\r\n    return (\r\n      <div className='main-image d-flex justify-content-center align-items-center flex-column'>\r\n        {/* Overlay */}\r\n        <div className='filter'></div>\r\n        \r\n        <div style={{ width: '50%', zIndex: 2 }}>\r\n          <InputGroup size='lg' className='mb-3'>\r\n            <Input\r\n              placeholder='Enter Book Title / Author name'\r\n              value={query}\r\n              onChange={e => setQuery(e.target.value)}\r\n            />\r\n            <InputGroupAddon addonType='append'>\r\n              <Button color='secondary' onClick={handleSubmit}>\r\n                <i className='fas fa-search'></i>\r\n              </Button>\r\n            </InputGroupAddon>\r\n          </InputGroup>\r\n          <div className='d-flex text-white justify-content-center'>\r\n            \r\n            <FormGroup size='md' className='mb-3'>\r\n            <Label for='sortBy'>Sort By</Label>\r\n            <Input type=\"select\" name=\"select\" id=\"sortSelect\"\r\n             onChange={(e) => {setSortType(e.target.value);\r\n            }}>\r\n                       \r\n                    <option value=\"newest\">Newest</option>\r\n                    <option value=\"relevance\">Oldest</option>\r\n            </Input>\r\n            </FormGroup>\r\n      \r\n\r\n\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const handleChange = (event, value) => {\r\n      console.log(value);\r\n    setCurrentPage(value);\r\n    getData();\r\n    // setPage(value);\r\n  };\r\n\r\n  const handleCards = () => {\r\n    \r\n     \r\n//  const currentPosts = cards.slice(indexOfFirstPost, indexOfLastPost);\r\n//  console.log(currentPosts);\r\n// console.log(cards);\r\n    if (loading) {\r\n      return (\r\n        <div className='d-flex justify-content-center mt-3'>\r\n          <Spinner style={{ width: '3rem', height: '3rem' }} />\r\n        </div>\r\n      );\r\n    } else {\r\n        \r\n      const items = cards.map((item, i) => {\r\n        let thumbnail = '';\r\n        if (item.volumeInfo.imageLinks) {\r\n          thumbnail = item.volumeInfo.imageLinks.thumbnail;\r\n        }\r\n\r\n        return (\r\n            \r\n          <div className='col-lg-4 mb-3' key={item.id}>\r\n\r\n            <BookCard\r\n              thumbnail={thumbnail}\r\n              title={item.volumeInfo.title}\r\n              pageCount={item.volumeInfo.pageCount}\r\n              publishedDate={item.volumeInfo.publishedDate}\r\n              authors={item.volumeInfo.authors}\r\n              publisher={item.volumeInfo.publisher}\r\n              averageRating={item.volumeInfo.averageRating}\r\n              description={item.volumeInfo.description}\r\n              previewLink={item.volumeInfo.previewLink}\r\n              infoLink={item.volumeInfo.infoLink}\r\n            />\r\n          </div>\r\n\r\n        );\r\n      });\r\n     \r\n      return (\r\n        <div>\r\n         \r\n      {totalResults? \r\n      <div class=\"container\">\r\n      <div class=\"row \">\r\n     \r\n        <div class=\"col-sm-3\" style={textpad}>\r\n          \r\n            TOTAL BOOKS : <strong className=\"text-primary\">  {totalResults}\r\n                        </strong>\r\n      \r\n            </div>\r\n        \r\n        <div class=\"col-sm-9\">\r\n               \r\n        \r\n                  <Pagination className=\"my-3\" variant=\"outlined\" count={totalPages} page={currentPage} color=\"primary\" showFirstButton showLastButton onChange={handleChange} />\r\n               </div>\r\n        </div>\r\n      </div>\r\n      \r\n      \r\n                \r\n        : <br></br>\r\n        \r\n      }\r\n         \r\n         <br></br>\r\n          <div className='row'>{items}</div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n \r\n\r\n//   const headerClass = ['text-dark py-2 pr-4 m-0', currentPage ? 'border-gray border-right' : ''].join(' ').trim();\r\n\r\n  return (\r\n    \r\n    <div className='w-100 h-100'>\r\n       <AppNav/> \r\n      {mainHeader()} \r\n               \r\n\r\n      \r\n\r\n      \r\n      {handleCards()}\r\n      <ToastContainer />\r\n      \r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Appnew;\r\n","C:\\express-react\\client\\src\\BookCard.jsx",[],"C:\\express-react\\client\\src\\Contact.js",["45"],"import React, { Component } from \"react\";\r\nimport AppNav from \"./AppNav\";\r\nimport './contact.css';\r\n\r\n\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios';\r\n\r\n// const API_PATH = 'http://localhost/api/index.php';\r\n\r\nclass Contact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fname: '',\r\n      email: '',\r\n      subject:'',\r\n      message: '',\r\n      sent: false,\r\n      error: null\r\n    }\r\n  }\r\n\r\n\r\n\r\n    handleFormSubmit=(e)=>{\r\n      e.preventDefault();\r\n      let data={\r\n        fname:this.state.fname,\r\n        email:this.state.email,\r\n        subject:this.state.subject,\r\n        message:this.state.message\r\n      }\r\n      \r\n      axios.post('/api/send',data)\r\n      .then((response)=>{\r\n        this.setState({sent:true},this.resetForm())\r\n           }).catch(()=>{\r\n                         console.log(\"Message failed to send.\")\r\n        \r\n      })\r\n    }\r\n\r\n    resetForm(){\r\n      this.setState({fname: '', email: '',subject:'', message: ''});\r\n      setTimeout(()=>{\r\n        this.setState({send:false})\r\n      },3000)\r\n\r\n           }\r\n\r\n\r\n\r\n    // console.log(this.state);\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n          <AppNav/>  \r\n      \r\n        \r\n       <br></br>\r\n<div className=\"contact\">\r\n        \r\n      \r\n<form onSubmit={this.handleFormSubmit}>\r\n  <label>Full Name</label>\r\n  <input type=\"text\" id=\"fname\" name=\"fullname\" placeholder=\"Your full name..\"\r\n    value={this.state.fname}\r\n    onChange={e => this.setState({ fname: e.target.value })}\r\n  />\r\n  \r\n  <label>Email</label>\r\n  <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Your email id\"\r\n    value={this.state.email}\r\n    onChange={e => this.setState({ email: e.target.value })}\r\n  />\r\n\r\n<label>Subject</label>\r\n  <input type=\"text\" id=\"subject\" name=\"subject\" placeholder=\"Subject..\"\r\n    value={this.state.subject}\r\n    onChange={e => this.setState({ subject: e.target.value })}\r\n  />\r\n\r\n\r\n  <label>Message</label>\r\n  <textarea id=\"message\" name=\"message\" placeholder=\"Write something..\"\r\n    onChange={e => this.setState({ message: e.target.value })}\r\n    value={this.state.message}\r\n  ></textarea>\r\n  <div className={this.state.sent?'msg msgAppear':'msg'}>\r\n    Message has been sent..\r\n  </div>\r\n  <br></br>\r\n  <button className=\"button1\" type=\"submit\" value=\"Submit\">SEND</button>\r\n  \r\n</form >\r\n</div>\r\n<br></br>\r\n</div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","C:\\express-react\\client\\src\\About.js",["46","47","48","49","50","51"],"C:\\express-react\\client\\src\\AppNav.js",[],{"ruleId":"52","severity":1,"message":"53","line":4,"column":8,"nodeType":"54","messageId":"55","endLine":4,"endColumn":14},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"52","severity":1,"message":"60","line":13,"column":10,"nodeType":"54","messageId":"55","endLine":13,"endColumn":20},{"ruleId":"52","severity":1,"message":"61","line":19,"column":26,"nodeType":"54","messageId":"55","endLine":19,"endColumn":31},{"ruleId":"52","severity":1,"message":"62","line":40,"column":10,"nodeType":"54","messageId":"55","endLine":40,"endColumn":20},{"ruleId":"52","severity":1,"message":"63","line":40,"column":22,"nodeType":"54","messageId":"55","endLine":40,"endColumn":35},{"ruleId":"52","severity":1,"message":"64","line":41,"column":10,"nodeType":"54","messageId":"55","endLine":41,"endColumn":20},{"ruleId":"52","severity":1,"message":"65","line":41,"column":22,"nodeType":"54","messageId":"55","endLine":41,"endColumn":35},{"ruleId":"52","severity":1,"message":"66","line":50,"column":9,"nodeType":"54","messageId":"55","endLine":50,"endColumn":16},{"ruleId":"52","severity":1,"message":"67","line":58,"column":8,"nodeType":"54","messageId":"55","endLine":58,"endColumn":16},{"ruleId":"52","severity":1,"message":"68","line":6,"column":8,"nodeType":"54","messageId":"55","endLine":6,"endColumn":16},{"ruleId":"52","severity":1,"message":"53","line":3,"column":8,"nodeType":"54","messageId":"55","endLine":3,"endColumn":14},{"ruleId":"52","severity":1,"message":"68","line":19,"column":8,"nodeType":"54","messageId":"55","endLine":19,"endColumn":16},{"ruleId":"69","severity":1,"message":"70","line":54,"column":22,"nodeType":"71","endLine":54,"endColumn":64},{"ruleId":"69","severity":1,"message":"70","line":68,"column":22,"nodeType":"71","endLine":68,"endColumn":65},{"ruleId":"69","severity":1,"message":"70","line":92,"column":22,"nodeType":"71","endLine":92,"endColumn":69},{"ruleId":"69","severity":1,"message":"70","line":108,"column":1,"nodeType":"71","endLine":108,"endColumn":45},"no-unused-vars","'Appnew' is defined but never used.","Identifier","unusedVar","no-native-reassign",["72"],"no-negated-in-lhs",["73"],"'ButtonBase' is defined but never used.","'toast' is defined but never used.","'maxResults' is assigned a value but never used.","'setMaxResults' is assigned a value but never used.","'startIndex' is assigned a value but never used.","'setStartIndex' is assigned a value but never used.","'classes' is assigned a value but never used.","'paginate' is assigned a value but never used.","'ReactDOM' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]